<?xml version="1.0" encoding="UTF-8"?>
<ivy-module version="2.0" xmlns:m="http://ant.apache.org/ivy/maven" xmlns:e="http://ant.apache.org/ivy/extra">
	<info organisation="org.antlr"
		module="ST4"
		revision="4.0.8"
		status="release"
		publication="20140325115835"
	>
		<license name="BSD licence" url="http://antlr.org/license.html" />
		<description homepage="http://www.stringtemplate.org">
		StringTemplate is a java template engine for generating source code,
web pages, emails, or any other formatted text output.

StringTemplate is particularly good at multi-targeted code generators,
multiple site skins, and internationalization/localization. 

It evolved over years of effort developing jGuru.com. 

StringTemplate also generates the stringtemplate website: http://www.stringtemplate.org
and powers the ANTLR v3 code generator. Its distinguishing characteristic 
is that unlike other engines, it strictly enforces model-view separation.

Strict separation makes websites and code generators more flexible
and maintainable; it also provides an excellent defense against malicious
template authors.

There are currently about 600 StringTemplate source downloads a month.
		</description>
		<m:properties__bootclasspath.java5>${java5.home}/lib/rt.jar</m:properties__bootclasspath.java5>
		<m:properties__java6.home>${env.JAVA6_HOME}</m:properties__java6.home>
		<m:properties__bootclasspath.java6>${java6.home}/lib/rt.jar</m:properties__bootclasspath.java6>
		<m:properties__bootclasspath.compile>${bootclasspath.java5}</m:properties__bootclasspath.compile>
		<e:sbtTransformHash>2ba227de4f1fe45d203d076aadbb0e3705eb6f82</e:sbtTransformHash>
		<m:properties__bootclasspath.testCompile>${bootclasspath.java6}</m:properties__bootclasspath.testCompile>
		<m:properties__project.build.sourceEncoding>UTF-8</m:properties__project.build.sourceEncoding>
		<m:properties__sonatypeOssDistMgmtSnapshotsUrl>https://oss.sonatype.org/content/repositories/snapshots/</m:properties__sonatypeOssDistMgmtSnapshotsUrl>
		<m:maven.plugins>org.apache.maven.plugins__maven-enforcer-plugin__1.2|org.apache.maven.plugins__maven-enforcer-plugin__1.2|org.apache.maven.plugins__maven-jar-plugin__2.4|org.antlr__antlr3-maven-plugin__3.5.2|org.apache.maven.plugins__maven-compiler-plugin__3.1|org.apache.maven.plugins__maven-release-plugin__2.5|org.apache.maven.plugins__maven-surefire-plugin__2.17|org.codehaus.mojo__findbugs-maven-plugin__2.5.3|org.apache.maven.plugins__maven-source-plugin__2.2.1|org.apache.maven.plugins__maven-javadoc-plugin__2.9.1|org.apache.maven.plugins__maven-gpg-plugin__1.5</m:maven.plugins>
		<m:properties__java5.home>${env.JAVA5_HOME}</m:properties__java5.home>
	</info>
	<configurations>
		<conf name="default" visibility="public" description="runtime dependencies and master artifact can be used with this conf" extends="runtime,master"/>
		<conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/>
		<conf name="compile" visibility="public" description="this is the default scope, used if none is specified. Compile dependencies are available in all classpaths."/>
		<conf name="provided" visibility="public" description="this is much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive."/>
		<conf name="runtime" visibility="public" description="this scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath." extends="compile"/>
		<conf name="test" visibility="private" description="this scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases." extends="runtime"/>
		<conf name="system" visibility="public" description="this scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository."/>
		<conf name="sources" visibility="public" description="this configuration contains the source artifact of this module, if any."/>
		<conf name="javadoc" visibility="public" description="this configuration contains the javadoc artifact of this module, if any."/>
		<conf name="optional" visibility="public" description="contains all optional dependencies"/>
	</configurations>
	<publications>
		<artifact name="ST4" type="jar" ext="jar" conf="master"/>
	</publications>
	<dependencies>
		<dependency org="junit" name="junit" rev="4.10" force="true" conf="test->runtime(*),master(compile)"/>
		<dependency org="org.antlr" name="antlr-runtime" rev="3.5.2" force="true" conf="compile->compile(*),master(compile);runtime->runtime(*)"/>
	</dependencies>
</ivy-module>
